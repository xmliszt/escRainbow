<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <script src="/js/jquery/dist/jquery.min.js"></script>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css" integrity="sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh" crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js" integrity="sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo" crossorigin="anonymous"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.min.js" integrity="sha384-wfSDF2E50Y2D1uUdj0O3uMBJnjuUD4Ih7YwaYd1iqfktj0Uod8GCExl3Og8ifwB6" crossorigin="anonymous"></script>
    <title>Admin Dashboard</title>
</head>
<body>
    <div class="jumbotron">
        <h1 class="display display-4">Create Agent Account in Rainbow</h1>
        <button class="btn btn-primary" id="homeBtn">Back Home</button>
    </div>
    <div class="container">
        <form>
            <div class="form-group">
                <label for="agentEmail">Agent Email</label>
                <div class="input-group">
                    <input class="form-control" id="agentEmail" type="text" aria-describedby="email-suffix" required>
                    <div class="input-group-append">
                        <span class="input-group-text" id="email-suffix">@alpha.com</span>
                    </div>
                </div>
            </div>
           <div class="form-group">
                <label for="agentFN">First Name</label>
                <div class="input-group">
                    <input class="form-control" type="text" name="agentFN" id="agentFN" required>
                </div>
           </div>
           <div class="form-group">
                <label for="agentLN">Last Name</label>
                <div class="input-group">
                    <input class="form-control" type="text" name="agentLN" id='agentLN' required>
                </div>
           </div>
           <div class="form-group">
                <label for="agentPassword">Password</label>
                <div class="input-group">
                    <input class="form-control" type="password" name="agentPassword" id="agentPassword" value="" disabled>
                </div>
                <small class="form-text" style="color: red; font-size: 1rem"> Password is set by the admin by default! Please contact admin if you want to change!</small>
           </div> 
           <div class="form-group">
                <label for="agentSkills">Agent Skills</label>
                <div class="input-group">
                    <select class="form-control" name="agentSkills" id="agentSkills" required>
                        <option value="0" selected>General Enquiry</option>
                        <option value="1">Card Replacement</option>
                        <option value="2">Investment/Loan</option>
                        <option value="3">Overseas Spending Activation</option>
                    </select>
                </div>
           </div>
            <div class="form-group">
                <button class="btn btn-success btn-lg" id="agentSubmitBtn" type="submit">Create Agent</button>
            </div>
        </form>
    </div>

    <div class="container" style="display:flex; justify-content:flex-end;">
        <button id="refreshDataBtn" class="btn btn-warning btn-sm">Refresh</button>
    </div>
    <div class="container" style="margin-top: 2rem;">
        <p class="alert alert-danger" id="errorAlert" style="display: none;"></p>
        <table class="table table-striped table-dark">
            <thead>
                <tr>
                    <th scope="col">#</th>
                    <th scope="col">Agent Email</th>
                    <th scope="col">Name</th>
                    <th scope="col">Skill Code</th>
                    <th scope="col">Skill</th>
                    <th scope="col">Status</th>
                    <th scope="col">Priority</th>
                    <th scope="col">Action</th>
                </tr>
            </thead>
            <tbody id="agent-table-body">                    
            </tbody>
        </table>
    </div>

    <script>

        $('#homeBtn').click(() => {
            window.location.href = "/";
        });
        function refreshData(){
            $.ajax({
                url: '/su/dashboard/data',
                type: 'GET',
                success: (data) => {
                    console.log(data);
                    $('#agent-table-body').empty();
                    data.forEach((agent, index) => {
                        var skill = agent.skill;
                        var skillText;
                        switch(skill){
                            case 0: skillText = "General Enquiry"; break;
                            case 1: skillText = "Card Replacement"; break;
                            case 2: skillText = "Investment/Loan"; break;
                            case 3: skillText = "Overseas Spending Activation"; break;
                            default: skillText = "Unknown"; break;
                        }
                        var busyText = "Free";
                        if (agent.busy) busyText = "Busy";
                        var entry = `
                        <tr>
                            <td>${index}</td>
                            <td>${agent.email}</td>
                            <td>${agent.name}</td>
                            <td>${agent.skill}</td>
                            <td>${skillText}</td>
                            <td>${busyText}</td>
                            <td>${agent.priority}</td>
                            <td><button id="delete-agent-${agent.id}" class="btn btn-sm btn-danger">DELETE</button></td>
                        </tr>
                        `;
                        $('#agent-table-body').append(entry);     
                        $(`#delete-agent-${agent.id}`).click(() => {
                            $.ajax({
                                url: `/su/dashboard/delete?id=${agent.id}`,
                                type: 'GET',
                                success: (data) => {
                                    console.info("Agent deleted successfully!");
                                    window.alert("Agent deleted successfully!");
                                    refreshData();
                                },
                                error: (xhr) => {
                                    console.error("Failed to delete agent.");
                                    window.alert("Failed to delete agent. Check log for more information!");
                                    console.error(xhr.responseJSON.error);
                                }
                            });
                        });               
                    });
                },
                error: (error) => {
                    if (error.status == 500){
                        $('#errorAlert').html("Sorry we can't retrieve the agents data at this moment!");
                        $('#errorAlert').show();
                    }
                }
            });
        }

        $('#refreshDataBtn').click(() => {
            refreshData();
        });

        refreshData();

        var skill = 0;
        $('#agentSkills').change(()=>{
            skill = $('#agentSkills').children("option:selected").val();
        });

        $("form").submit((e)=>{
            e.preventDefault();
            var firstName = $('#agentFN').val();
            var lastName = $('#agentLN').val();
            var email = $('#agentEmail').val() + $('#email-suffix').html();
            var password = $('#agentPassword').val();
            if (skill != undefined){
                $.ajax({
                    url: "/su/create",
                    type: "POST",
                    data: {
                        email: email,
                        password: password,
                        firstname: firstName,
                        lastname: lastName,
                        skill: skill
                    },
                    success: (data)=>{
                        window.alert("Agent created successfully!");
                        window.location.reload();
                    },
                    error: (xhr)=>{
                        if (xhr.status == 401){
                            window.alert("Unauthorized access! Please log in first!");
                            window.location.replace("/su");
                        } else if (xhr.status == 500){
                            window.alert("Error in creating the agent: Agent already existed in RainbowSDK!");
                            } else if (xhr.status == 501){
                            window.alert("Error: Agent already existed!");
                        }
                    }
                });
            }
        });
    </script>
</body>
</html>